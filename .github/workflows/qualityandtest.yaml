name: Code quality & Testing
on:
  workflow_call:

jobs:
  testPy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.4
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction
      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          FILTER_REGEX_EXCLUDE: .*venv/.
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_PYTHON_FLAKE8: true
          VALIDATE_PYTHON_ISORT: true
          GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_PAT }}
      - name: Pylint & MyPy
        run: |
          source .venv/bin/activate
          pylint $(git ls-files '*.py') --rcfile=.github/linters/.python-lint --ignore-patterns=.*venv/. 
          mypy $(git ls-files '*.py') --ignore-missing-imports --disallow-untyped-defs || (mypy --install-types && mypy $(git ls-files '*.py') --ignore-missing-imports --disallow-untyped-defs)
      - name: Add pytest to env
        run: poetry add pytest
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest test/
