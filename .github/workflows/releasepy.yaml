name: "Release"

on:
  workflow_call:

jobs:
  Release:
      # considera que todos os outros testes ja foram rodados antes do release
      if: ${{!contains(github.event.head_commit.message, 'chore(release):')}}
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
            token: ${{ secrets.ADMIN_GITHUB_PAT}}
        - uses: actions/setup-python@v4
          with:
            python-version: 3.10.4
          env:  
            ADMIN_TOKEN: ${{ secrets.ADMIN_GITHUB_PAT }}
        - name: Install Poetry
          uses: snok/install-poetry@v1
          with:
            virtualenvs-create: true
            virtualenvs-in-project: true
            installer-parallel: true
        - name: Load cached venv
          id: cached-poetry-dependencies
          uses: actions/cache@v3
          with:
            path: .venv
            key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        - name: Install dependencies
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
          run: poetry install --no-interaction --no-root
        - name: Install project
          run: |
            poetry lock --no-update
            poetry install --no-interaction
        - name: Semantic Release
          run: |
            source .venv/bin/activate
            git config user.name github-actions
            git config user.email github-actions@github.com
            GITHUB_ACTOR=admin GH_TOKEN="$ADMIN_TOKEN" semantic-release publish --verbosity=DEBUG
